#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import pandas as pd
import matplotlib.pyplot as plt


# In[ ]:


df = pd.read_csv("../input/salary-dataset/salary_dataset.csv")


# In[ ]:


df.head()


# Your analysis grouped by `dept` first and then `jobTitle` to generate a range of different values. We can do this pretty concisely in pandas using the `describe` method. 

# In[ ]:


df.groupby(["dept", "jobTitle"])["basePay"].describe()


# We didn't assign this table to a variable, therefore it is not saved anywhere. I do this below to the `summary_df` variable. 

# In[ ]:


summary_df = df.groupby(["dept", "jobTitle"])["basePay"].describe().round(0)


# The code below generates an overall Pay vs JobTitle boxplot. 

# In[ ]:


df.boxplot(column=["basePay"], by=["jobTitle"], rot=90, grid=False)
plt.title(f"Base Pay by Job Title")
plt.suptitle('') # Removes the autogenerated label
plt.xlabel('') # Sets the x axis label
plt.ylabel('Base Pay') # Sets the y axis label
plt.ylim(bottom=0, top=180000) # Sets the y axis lower and upper bounds
plt.show()


# In[ ]:





# In[ ]:





# To generate by department, you can do this by:
# - Generating a smaller dataframe of each department
# - Generating a plot for each smaller dataframe

# In[ ]:


# Get the name of all of the departments
# We need this to feed through the iterator below
department_names = df['dept'].unique().tolist()
    
for department in department_names:
    # Generates smaller dataframe with just the data for a single department
    subset_df = df[df['dept'] == department]
    # Generates the box plot for each department
    boxplot = subset_df.boxplot(column="basePay", by=["jobTitle"], rot=90)
    plt.title(f"Base Pay by Job Title in {department}")
    plt.suptitle('')
    plt.xlabel('')
    plt.ylabel('Base Pay')
    plt.ylim(0, 180000)

plt.show()


# In[ ]:





# In[ ]:




