#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
This script generates a 'warming stripes' graphic using matplotlib. 
For background information on warming stripes, see: 
    https://www.wikiwand.com/en/Warming_stripes

As a sample input, I have included the central Dutch temperature series, an
excellent open dataset generated by the KNMI, the Dutch meteorological 
institute. This dataset contains the mean monthly temperature, based on an 
average of measurements acquired by six weather stations in The Netherlands.
Data is available from 1906.

The dataset can be downloaded from:
https://projects.knmi.nl/klimatologie/onderzoeksgegevens/CNT/tg_CNT.txt

The version used for this example was downloaded on August 25th, 2019.

@author: R. van den Berg
"""

#--------------------------------------------------------------
# Import libraries
#--------------------------------------------------------------

import requests
import csv
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.colors import Normalize

#--------------------------------------------------------------
# Data loading and cleanup
#--------------------------------------------------------------

# URL for data download.
dataURL = 'https://projects.knmi.nl/klimatologie/onderzoeksgegevens/CNT/tg_CNT.txt' 

# Define empty lists to store year and temperature.
year = []
temperature = []

# Use the requests library to download the dataset from the KNMI website and
# extract the data.
with requests.Session() as c:
    raw_download = c.get(dataURL)
    decoded_download = raw_download.content.decode('utf-8')
    cr = csv.reader(decoded_download.splitlines())    
    # The first 12 lines contain metadata and the column headers.
    for badline in range(12):
        next(cr)
    for line in cr:
        line = str(line)[2:-2]
        tempList = [float(tl.strip()) for tl in line.split()]
        year.append(int(tempList[0]))
        # Calculate for each year the mean and append to temperature, rounded
        # to 2 digits.
        temperature.append(round(np.mean(tempList[1:(len(tempList)+1)]), 2))

# Cleanup. 
del([dataURL, decoded_download, badline, line, tempList])

# Normalize temperature data using the formula
# T_norm = (T - mean) / standard deviation
T_norm = (temperature - np.mean(temperature)) / np.std(temperature)

#--------------------------------------------------------------
# Create color map
#--------------------------------------------------------------

# Choose colormap for bars.
my_cmap = plt.cm.RdBu_r 
norm = Normalize(vmin=min(T_norm), vmax=max(T_norm))

def colorval(num):
    return my_cmap(norm(num))

#--------------------------------------------------------------
# Plot warming stripes.
#--------------------------------------------------------------
fig, ax = plt.subplots(squeeze=True, figsize=(12,4))
# Hide the right and top spines
ax.axes.get_yaxis().set_visible(False)
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)
ax.spines['left'].set_visible(False)
# Only show ticks on the left and bottom spines
ax.xaxis.set_ticks_position('bottom')
ax.set_ylim(0, 1)
ax.bar(year, 1, color='white', width=1.0)
for a, temp in enumerate(T_norm):
    plt.gca().add_patch(
            plt.Rectangle(((a+year[0]), 0), 1, 1, color=colorval(temp))
    )
fig.suptitle('Deviation from average temperature De Bilt ' + str(year[0]) + 
             '-' + str(year[-1]))
