{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.0"}},"nbformat":4,"nbformat_minor":0,"cells":[{"metadata":{"_cell_guid":"9698e9a5-4614-6f8e-d6fb-63125e8a53e3","_active":false,"collapsed":false},"source":"This is my first attempt at using Kaggle and to seriously use pandas, scikit-learn, matplotlib, etc.  I will mostly be copying the contents of the tutorial kernel \"Titanic Data Science Solutions\" and playing around with it to better understand the tools.","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"30ce7dd2-d100-4640-0488-3fc1656475a5","_active":false,"collapsed":false},"source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\n# data analysis, wrangling\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\n","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"ca674c9f-a2dd-c41e-a7e1-a5d2a1c07db9","_active":false,"collapsed":false},"source":"**Import data**","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"7ae851ee-55b1-0950-3f0d-90e79337eacf","_active":false,"collapsed":false},"source":"train_df = pd.read_csv('../input/train.csv')\ntest_df = pd.read_csv('../input/test.csv')\ncombine = [train_df,test_df]","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"03a459fa-a398-cd9f-b12e-46e5ab011ff3","_active":false,"collapsed":false},"source":"**Initial analysis**\n--------------------\n\nPrint header to identify categories.\nSeparate into categorical and numerical manually. Can't use dtype to do this separation; it requires domain knowledge.\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"759c8f98-3b21-3ae5-a810-c7a4aff6f58b","_active":false,"collapsed":false},"source":"print(train_df.columns.values)","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"9948b334-795e-ee0a-9c25-2885c2ca61c5","_active":false,"collapsed":false},"source":"Categorical: Survived, Sex, Embarked\nOrdinal: Pclass (class of service)\nNumerical, continuous: Age, Fare\nNumerical, discrete: PassengerId, SibSp, Parch\n\nWhat about Ticket, Cabin ?","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"d2b0c41c-4005-3892-4637-7a94b9dfaa3a","_active":false,"collapsed":false},"source":"train_df.head()","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"1f5139c3-8fbe-7ff0-d7d1-0eaa9ca5b5cb","_active":false,"collapsed":false},"source":" 1. Ticket is mixed numeric and alphanumeric with spaces, line feeds\n 2. Cabin is alphanumeric\n 3. Cabin has invalid data (NaN)\n\nFields may have typos but can't say much now.  Name format may not be consistent throughout the dataset.  Next look at the tail of the dataframe to see if the columns are out of sync due to missing data\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"ee791bf5-6e34-4afe-e714-b63eb1cd9e6c","_active":false,"collapsed":false},"source":"train_df.tail()","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"0bc2c5c0-1af6-213b-a68d-0b7edfe149fd","_active":false,"collapsed":false},"source":"NaN seen in age column too.  Ticket format varies quite a bit from mixed to numeric only.  ","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"3c98bda8-17e8-aa27-160e-9b4866f4301d","_active":false,"collapsed":false},"source":"Now use df.info to see the datatypes and number of non-null entries per column for train and test datasets\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"5a008a78-46f5-ed8a-4e74-1cbbbe84d700","_active":false,"collapsed":false},"source":"train_df.info()\n","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"8820d5fb-4346-a3cc-1e57-f5d6040b1a70","_active":false,"collapsed":false},"source":"test_df.info()","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"28ad9460-b431-fd9d-da1e-b097946bfb90","_active":false,"collapsed":false},"source":"## Observations ##\nThe training set is 891 entries vs. 2224 original passengers, i.e. 40% of the total.\n\nThe test set is 418 entries, i.e. 20% of the total\n\nNow use dataframe.describe() to get descriptive statistics for each column\n\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"93402653-cc42-d0a5-1914-8bc24a11697e","_active":false,"collapsed":false},"source":"train_df.describe()","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"1d86017f-c8d5-f676-c9ad-1975728686aa","_active":false,"collapsed":false},"source":"## Observations from describe() ##\n\n - 38% of passengers in sample survived (vs 32% actual)\n - From observing the 75% percentile for Parch, we can say that >75% of passengers traveled without parents or children. \n - Further analysis of percentiles for SibSp needed\n - Very few elderly passengers\n - Fares varied considerably from 0 to 512 with a fairly small mean (32)\n\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"33d6514d-e7db-7838-f0e8-abe637dc1cf8","_active":false,"collapsed":false},"source":"train_df.quantile([0.68,0.69])","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"49ae2194-146c-eaca-a7dc-501b5d6755ac","_active":false,"collapsed":false},"source":"SibSp transitions from 0 to at 69%. So we can say that ~ 30% of passengers had 1 or more siblings/spouses.\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"ca8e930c-c792-00bc-e3da-567ed859483c","_active":false,"collapsed":false},"source":"train_df.quantile([.1, .2, .3, .4, .5, .6, .7, .8, .9, .99])","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"3c9432e5-8dd5-e9c9-49c5-73b986542f8e","_active":false,"collapsed":false},"source":" - 90% of passengers under 50\n - Very high fare (>250) paid by 1% of passengers\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"0021fb61-20e3-fcfb-50a1-d0fed4013adb","_active":false,"collapsed":false},"source":"Now let's look at the description of categorical features\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"2bb3ff29-c634-0841-4fc6-9b7c233e35d0","_active":false,"collapsed":false},"source":"train_df.describe(include=['O'])","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"19b1f1bb-e2f4-2ebc-7b0e-c7fca880ded0","_active":false,"collapsed":false},"source":" - names are unique across the dataset (891 unique/891)\n - 2 sexes, male/total = 577/891 = 65%\n - Cabins not unique across dataset. Could be shared cabins and data errors\n - 3 values for Embarked.  2 Entries missing. Port \"S\" most common\n - Tickets have many non-unique entries.  Based on earlier look, this may not be a useful variable\n","execution_count":null,"cell_type":"markdown","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"161d44b4-53c1-000e-69a7-0a7b02e062c0","_active":false,"collapsed":false},"source":"a=train_df[['Pclass','Survived']].groupby(['Pclass'],as_index=False).mean()","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"1b162cf5-3a81-ef59-4b2c-be5fb2dad8cb","_active":true,"collapsed":false},"source":"print(a)","execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"},{"metadata":{"_cell_guid":"793da84b-b1da-337d-7730-4bf8e0546403","_active":false,"collapsed":false},"source":null,"execution_count":null,"cell_type":"code","outputs":[],"execution_state":"idle"}]}