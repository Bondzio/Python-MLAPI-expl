#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


# In[2]:


data=pd.read_csv("../input/Malware dataset.csv")


# In[3]:


data.head()


# In[4]:


data.shape


# In[5]:


data.isnull().sum()


# In[6]:


data.columns


# In[7]:


data1=data.dropna(how="any",axis=0)
data1.head()


# In[8]:


data1["classification"].value_counts()


# In[9]:


data1['classification'] = data1.classification.map({'benign':0, 'malware':1})


# In[10]:


data1.head()


# In[11]:


data1.tail()


# In[12]:


sns.countplot(data1["classification"])
plt.show()


# In[13]:


data1["classification"].value_counts().plot(kind="pie",autopct="%1.1f%%")
plt.axis("equal")
plt.show()


# In[14]:


benign1=data.loc[data['classification']=='benign']
benign1["classification"].head()


# In[15]:


malware1=data.loc[data['classification']=='malware']
malware1["classification"].head()


# In[16]:


corr=data1.corr()
corr.nlargest(35,'classification')["classification"]


# In[17]:


x=data1.drop(["hash","classification",'vm_truncate_count','shared_vm','exec_vm','nvcsw','maj_flt','utime'],axis=1)
x.head()


# In[18]:


y=data1["classification"]
y


# In[19]:


from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split


# In[20]:


x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1)


# In[21]:


from sklearn.naive_bayes import GaussianNB
model=GaussianNB()
model.fit(x_train,y_train)


# In[22]:


pred=model.predict(x_test)
pred


# In[23]:


model.score(x_test,y_test)


# In[24]:


result=pd.DataFrame({
    "Actual_Value":y_test,
    "Predict_Value":pred
})


# In[25]:


result


# In[ ]:





# In[ ]:




