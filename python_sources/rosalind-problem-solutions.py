#####################################################################################
#
#               Solutions to Rosalind Bioinformatics Questions
#           Questions come from http://rosalind.info/problems/list-view/
#           
#           Note: Data are hardcoded sequences, yours will be different
#
#####################################################################################

# Importing Libraries

import numpy as np
import pandas as pd
import Bio
from Bio.Seq import Seq
from Bio import SeqIO
from Bio.SeqRecord import SeqRecord
from Bio.Alphabet import generic_dna
from Bio.SeqUtils import GC

#####################################################################################
#
# Rosalind Challenge 1: Counting DNA Nucleotides
# http://rosalind.info/problems/dna/
#
#-----------------------------------------------------------------------------------#

print("Rosalind Challenge 1: Counting DNA Nucleotides\n")

dna1 = Seq("GAAGTACTAAGCAAGGAAGTCTAAATAGATTGTACGCGGACGTAAGATTTTATTTGACGGGTTGACTAAGCGGTCGACGCCCCCGTCGCCCGTGCTGACAGAAGTAACGGACAAGTGAACGGGAAAGATTCCTAACTGCGGTTGTGAGGATGGAATTCTATTGAAATCGTTAAATCCCCGCTTGACATGAATACGAGATGAACTTTTAGCAAATTAGATAGTTCCCTAAAGATCTTCCTACAACTCCTCCAAGCTGCGAATGCATGAGATGGCCGGGGTTCGTTAACGCACCTTCTCGGCAGATCGCACAGATGGAGATCAATGTACGGAATAGATAGCAGCACCTAACAAGTAGAATTTGTATGACGGCAATATGGCTCAAATGTACTATGTAAGAAAGGCTCGAGCCTGTATGCCGATCCTTTTGCCTGTCACGAATGCTTGGGAAGTTTGCCAAACGGCAGTCCGACCCTCGGATTCCGATCCGACTACCATGAGACCCTACAACGTATGATAAGCCGCTAACCAGCGTATCCGCGTTTATCTTCGGTCCGAGGTCAACGGGCATACGCCCGTTAACCGCAAGTTACCAAGATACTACGGAAATCTATCCTGAAAACATTGTGGGCTGGGCACAATACCATTTTCAGTCAACTCTCCAAAATCCCAAAACCCATGGGAAAAAGTATACGGAAGTTCTGCTATAGCGGTGACCGACGGGTCAAGGCTCTGCCCTTGTCAATGGTCGACCTGGCCAACGATTCATCGGAAGCCGACAAAAATCTGGTGACCATCCAGGACGCGAACGTGAAATGTGGTTTTAGAACACCTATATTCATAGCCCTTGGGCTCTTAGACCCGGAGTCTTCAAATCTTAGCGAGGTTCGTTGCCAAATCCTGATGGCACCCCGACGAGATACCTAAACGCTTGTTCGTTCTCGTCAGTAGTCTGTCAT")
print(str(dna1.count("A")) + " " + str(dna1.count("C")) + " " + str(dna1.count("G")) + " " + str(dna1.count("T")))

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 2: Transcribing DNA into RNA
# http://rosalind.info/problems/rna/
#
#------------------------------------------------#

print("Rosalind Challenge 2: Transcribing DNA into RNA\n")

rna2 = Seq("GTCACACTAGCAACCTGCTCACGAAATAATGCTAGGGTCCATGTCAAATGCTGTATAAATCCCTATGAACCGCGCATCAGGTTTCTACTTAGGGGGTACGCGGGCTAGGTGACTAGATAAACAGGCCGGTATGCAAACGACGCTTACGGCTGCTACTTGACCGAATTCAGGCTTGACTCCCCTGGCCTTGTTCATAAGCGCTAGTCGCGCTCAAGATGAATTCAGCAAATGAATCCCTGGGAGTGAACACGCAGTCCTCTCATGCAGTAGCACACTCGCCCATTGTTCTACTACTGTAATATAACCATCCCCTCAGATTGACACTAGTTGCTGCTCTTTGGCGATTACGACTGCTCGCCAGGATGGGCGATCAACACTGACAGTGGCTCTACAATAATTGATCGTTAGCTGGCGCCGTTTCAAGTGGAGTCGCGTACCAAGTAGCTGAGATTGCATCCTGCTACCGGGGTCATTTACTGTTCCGATATTAGGCATGCGGACAGTTGTACCGACGGGAGTTTATGAGGTAATACCGGCGTCTCCCAAACGTACAACGATCCCTACAAGGCCTTGAATTTCCTCGCCAGTCAACGTGACCGCCGTCTATGTCAATACACAGTGCAACGTGTGTGAGATCGATCCGCTTAGAAATAGCCTGTAGGCTAAACTGTATCTTTCTACCCGCGACCTGGCCCCGCAGTTTGCCACCATTAAGTTAGCGGAATGTTCTGTAGTAGAGTTGGGAGCCGTTGTTTACAAACTCATGGCACGCGAATGGGTCACTTAAAGCGCTTTCTAGTACCGTATATAGACTCCTTACTGGGTACGATAAACATTCGGGAAATGCTCTTCGGAGGGAGACGTCAAGTTCTGTGAACCGCAGGAAGAGGGCAGAATGGTTAACACTTTTATAAGGTGAAGGACAATATCTAAACATTCCTTCAACGCCAGAGTCATTTGTAATGGTTTTGTTCCGCGTAAAAA")
print(rna2.transcribe())

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 3: Complementing a Strand of DNA
# http://rosalind.info/problems/revc/
#
#------------------------------------------------#

print("Rosalind Challenge 3: Complementing a Strand of DNA\n")

dna3 = Seq("GAGAAGCACCAGTTCCCGGGAGAACACGAGATCCTAGCACCCAGTGCAGCTATGCGCGTAGCTCGAGCATTTTCTTTTGTAACATCAAGGTCTAGACTCAAACAATCTGTCCAAGCGCTGACCAGTTGGAGCGAGACATAAGATTATCACGAGTTTCTTGAAACCGTGTCTGGACGCGTGGAACTGTGTCCCCCACGGATCATTTTGGGACATCTCCCGCATTGTATAGATTAGGGCCGACTCTAGTAACAATTGGAAGTAACAGCAGGGGTCTCTCGGATATTTAATTCCCGCGCCGCGACTCGCGCGGGATGGTACTTAAGATACTAATTGCACGGACGCGTACCAGACGCCCCGCCTTTTCTGGTCTTATTCATTGCTCCTTTTAGCCGGACATACGCTGCTGCGTACTCGTGGGCTTCGGCAGTTATGGAAGATTAGAGCTGTGCCATTCGTCCAGAACTCTTGATCGTAACCCTTACTTCAGTGCTACACAGGTAACGGGCTTAGCGGCCGGCCTCGCTTGATGATGATTAAGGCCGTACTAATGCGGTTTTGATGGACTAGGCACGTGGTACCCAGTATGCTGCCCCTTGTGCGGGCCGAAATCAAAGCCGATTAGACTGCGTTGTGGCATAATGGACCTGAGCCGCTGCTGATCTTGTCCGTGAAGGGTTCCGGAAGGCTTCCGTGCCAGTTTGTACAGCCCGTTAATATATTTACTCGGTGACTAATTGAAAGCTCATGCAGCTCCGGACGTCACCGTCGGGGGCAAGAGGCACACTCACGTCCCCCAGGTAACACGTATTCGCTGTTTACCTGTCCACCTTTCTCCCCACAGGACACACTTCTCCCTCGAATGCAGGTCACCGAGGGGGGTCATCATAATGGCCATTGAAGTCGGTCTAGATTTATT")
print(dna3.reverse_complement())

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 4: Rabbits and Recurrence Relations
# http://rosalind.info/problems/fib/
#
#------------------------------------------------#

print("Rosalind Challenge 4: Rabbits and Recurrence Relations\n")

adults = 0
children = 1

count = 1
newadults = 0

n = 32 # number of iterations (months)
k = 3 # number of times each pair 

while (count < n):
    newadults = adults + children
    children = adults * k
    adults = newadults
    count = count + 1
    
print (adults + children)

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 5: Computing GC Content
# http://rosalind.info/problems/gc/
#
#------------------------------------------------#

print("Rosalind Challenge 5: Computing GC Content\n")

# We need to paste the file content in here since we can't use the file itself, sorta tricky with the time limit

rec1 = SeqRecord(Seq("ATCACACCAAAATAGGTGGGTGCTCTATGTTTAAACGCTCAGGGGGTTGTCCCGTATCGTCCCCACAGATTACTGTTTTCTGCCCCTAAACTTAGCCCCAACGAGTAATACCATCTCCAATAATTTCATAGATTAACTAGAAGCCTCTACGGCCCGCCTCTTATGTGATAAGATAACACAGAGGGTGTTGTTAGAGCTCGACTACATACCACGAAAAGTACCTGGAAGATCGAGGACTCAGCTCGTGCGACTAGGTTACTATCATGTGCTAACCAGCGCGGGAAAAAGTGGAGACCCGCATCAGGCGACGAATGAAGTTAGGGCCACGTCAGGCGTTTTTGTATGCAACACTGCCAACTAGTTTCCCCGAGCGTATCACAATCCAGCTCAATTAATAGGGACGCTGCCCACAAGACGGGACGCAGATGTTAAAACTGGTCTGACAGGTATAATTGCATCGTGCCGGTGAGCAGAGGGCTCCGGCGTATAGGAGGACCTCGACTACATGCAGAATGCCAGTTGCTCCATCGCTCGACTGCGCCAGCTGCCGTCTATGCGTAGATGTATTCTTTCACTCAGCCACGGACACAAGCGGGAAAAGCAACCCTCCTCATGATTGTCGGCAGTAACAGGATTCATTATAGTCCAATCATCAGAGTTATAGACGCGAGGAAAAAGGGACGGCCGTCGACGGAACTGTAGAGCTTGCCTATTAAATTAAAAATAGCTTGTAAACGCGCTCGGCTCGACCCGAATTGGTGCCTACCAACGGTCCGTGAAAGTTAATCTTGGGAATCACTTACTCTTGACAATTAACTAAACACGAATTTGCAGTAGGTTTTCAACAAAGCTTTCACTGTAACTAGCCTGTCGCACACGAACGATTCGCGGTCACACGCCTCGCCGCAAAGTATAATGAAATCCCCCCACTAAGCGGCCCTCTACTGCCAACGATACTGCGGTTTTCAACA", generic_dna),
                 id="Rosalind_9923",
                 description="")


rec2 = SeqRecord(Seq("CCCCGTATAATCCAGAGCCGTCCGACTTGACTTAGGTGGCACTACCCGTAATTATGCTGTTTATGCTTTTGTTTGCGCGCCGAGGTCGTAGAGATTCACGGATCTAGCCTTCAACCATCTATCGTCACCGCTTCCCTGGGCATAAACACACTCCACGAACCTCCCGTCGTTTCACTCCTTATTTACAAACATTTCCGGTGCTGATGGAGACGCTTTGAGTATAGGACGGTCCCGTAACCAGAATAGAACACGCGTCAGTCGAGGCAATCAACCATGCAATTGTTCTAATCTATTGGGGAGGACTGGGCCGTTGCCTGCGCAGAAACTGTGGAACATCGTCCAATATTTCGGAAAAGTATCAGGACCGAGAAATACGGCGTTATCTGCCCTTCGCATCGGGTCTCTAACCACCGCCACAGGACGCCAGAGTTAAGAAGGAATATGCCCGCTACACGAAGCCCGACGCTATATCGTACGATTGCGACGCTCGCGAGAGTCAAAATGGAAGGTTCAGCCCCATAAGTTGATGTTGGCCACCAGATTACAGCTTTCTAACATGTCACTCGCAAGATGAAAATCGGGGGGGGTTCAGTCCTATCTCCTCGTGCGGGCGACTATTTCCGACTAAGTGAGTGAAGGACGCCTGCGTCAACGCTCCCTCTCCGGGGCTGAGAGCCTCTGGACGAGCACCGGTCAAAGTCACTTCATCCCGGTGGTACATTAGTCAACTGACGCTGCTTAATGCCCTACGCTTGTATAGGGTAACTAATCTGGATGTTAACCGAGATTCTCAGTAGAAATCTTAGACCAAGAATCAATGATCTTACGAGTAATCAAAAATTGCGATGACGTACAAGATGGCTGGTGATAGCCGACAAAGTACGTCGTAGTTTTGGGCGAACGCGCACGGAGGTAGGCAAAAACCATATCAAATGCATTGTATGACGGAGTATGTCTACGACGTGGGGGTACAATTTGT", generic_dna),
                 id="Rosalind_8885",
                 description="")

rec3 = SeqRecord(Seq("GCCGTGTTAGCCATCCTCAACCGAAAGCTAGGGCTAAAGTTTCTGCGTCCCTGGATAAGTCATTACACGGAGAACCCTCTACGCCGGAGACGACTTTATGGATACTTGGGCGTTGTCCAGCATCGCATCAAGTGCTGAGTTATGTATAGCCGGTACGGTATCTGCAACGGTAATTACTTCTAATGCCAAGATGGCTTATAAAGGATATGAACTTAATATCATCTTTGATGATAGTTCTCGATTTACAGGTAGGCGGCGGCCGACTACAGGAGAATCATCTTCGTGAGATTTTCATAAACACCTACACTTCTACCATGCCGTGTAGACACACGGTGTTGCCTGGATTTGTAGGCCAAGAAGTTTGCACGAGGCTTGTCTACGACGGTATCTAATGCAAAAGACCATCACAGGATTCTGGTCAACGTCCGGGTCCGCTTTATAGGACATTATGGCAGTTTAGAGACGATTATTTTGGCGTACTGCTGACATCGGCGATCATCGATATGTGTATCGCGTATAGTGTTTGGTGTGGCAAAAGTCTCTGTTTTTAACTGTTGCCGTCTTGTGTGAGGTCCGCCGGGCACTGGTCACTGGCTGAAGACAGTCATGCATTCTTAACGTAACCAAGTTGCGAGGAACGTACCATTTAAGCCAGGCCAGGTCATAACGTCGTTCTGCCTGCACATACTCAACTGGACAGGTGTATACCTTCGTCTGCATTGGTTAGTTTAAAATCCCACTTAGCTTGACCAGGCCCCCTTCACCAAATCGTGCCACTGTGCGCTCATGCTCCATGCCTAGCTGGCTTAGCGCGGCATGGTATGTATCGGTACTTGCACAGATCATGACTTACTGTCTCCTTGCTTACTCCTCGTACCACGTCTGATGGCTCCAGAGACATAGCCACTCTCCATC", generic_dna),
                 id="Rosalind_9566",
                 description="")

rec4 = SeqRecord(Seq("AGTGTACATAATGGAATCGGTAGATTTACAGAGTCCTCTTCCCCACGCATTATAGGCTGAACGTGCTTGAGAGATATACCACGGTACGGACACCGCTCGTATACAATTGTCTCTCTCTTCTCTATTCCGGTGTGTTCGGTTATCCGGCTTGTTACATGAGCTTTAATTTGAGGGAAAGGAATTGAAACATAGGCCTGGATACTTATCAGACAGCTTCTTTATGATGGATACACAATAGTTACTGGTGTAGGCTCCGAACGTGCAGGAACACCACAACTTCTTTTAGCTTGTAGGGTCTATATTACATTCGCTCTCTCGCGTCGTCCGGCTCTATAGTTATAACATAGAGCATGTAACTCTTACATTACACGCCAGCTGGCTCGAGCGTCGGCGAGAATCCCTTAGCTATTTGACGGTAAGGGTACAGGCTAGTTGTTCGCAAATCCATGCAAGATGGCGATTAAGGTACCCAGTTGGGCGAACAGTGTGTGTCACTCTTTGCGTGTAGATCACGGGCATAAGGGAGTTGTGTCGAGCTGATGGCGACACCCTCCTGGGATTCTAATTCATTCGCGTTAGTACCCAGCGAAGGGCATTAAAGAGGTCTAAATCAAAGTGGCTCTGTTCTACACATGTTAGAGTATTAGCTCAATGACGCTCGCACCCTACGCAACCCGACAAAAATCGAAGGCCATGTGACGGAGGAGTTCAATCCCAATACATATAGTTCACGTCTAGTCAAGGGAGTATACGAATGGCGGAAAGGTGCATGCTGCAGAATCTGGCACGGACACCGGCCCGCGGTTTAGGGGTACCAAGGAATATTCCCGAGGCGTGGGTAGATAGACGTATACCGACGAACACATGATGGGCTTTCTCTCTCGCATTACTGAAGAGGACAAAGCAAGCGGGACCTCACACACTTGCGTCTTCGAACGAAGGCATACGGGTACGAACCCCCAGCATCGGTTCCCTGGA", generic_dna),
                 id="Rosalind_1567",
                 description="")

rec5 = SeqRecord(Seq("TAGGTTTACACGACGCGTTTAAACTGAGTAAATGCCTACTCACTGCTGAAGGGCGATTTGCAACTATCGCGCATTCATTCCCTTCCGTATGAGTACACAGTAGAGTGTGTCCATACTCTTTCTACAGCCCCGGCGTAGACCACCACGCCGCTTAGGACCCAAATGAACGAGACTTCTCTTAGCCACTGCGAGGAGTTTTTCGTGGTTGGAGCTAGACATAACATCCAAGCTCGTGGATGGACTTTGTTTTTGCGTCCGTTCGATTCCGAGACTAACGAGGGAGGATTGTGAAGCGGCACTACTACGCGCGCGCAGTCTGCTGCTCTCATCATGATATTTGCACCCATGGATGACGAACAGCATCAAGCCGTCCCACATCGTAGCACTAGTACGATTGCCGAATTTGAGTGCATTACCTAACGGGGGCGGATAGATACGGTGACCAAGCTTGCCAGCTTCGCTTGTCATGTTTCAATGACTTAGGAGCCTGCTTAGTCCCCTTAAGGCGGTGCCCAATGCCTGCTCGCTTGTTAACGATACCCCCGTATACTCAAAGTTCTGCAGCCTTTTCTCACGACTGACGATTGCTGAATGTTAAGTTACTCCGCCTTTGTGGGAAGACGATACAGCTAGTAATAACTTACCTACCTTAACATACACTGGACCCATTGAGCGGGCGGGGTATCACGTTCCGACATATGCGTTGCCCGACTTACACGTTATTGTGTAGACAGTCGAGCACATGCTCCTGGTCGCGAGTGGAGTGTTGGAGTCGGGAGTGGTTACGGGTTGTATACTACCTGTGCACCCAGGCCACCTAACCGCGCCACTGGTAGTTTGGGTAGATGT", generic_dna),
                 id="Rosalind_4334",
                 description="")

sequences = [rec1, rec2, rec3, rec4, rec5]
highestGC = 0
currentGC = 0
highGCid = -1
currentid = 0

for s in sequences:
    currentGC = (GC(s.seq))
    if currentGC > highestGC:
        highestGC = currentGC
        highGCid = currentid
    currentid = currentid + 1

print(sequences[highGCid].id)
print(highestGC)

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 6: Counting Point Mutations
# http://rosalind.info/problems/hamm/
#
#------------------------------------------------#

print("Rosalind Challenge 6: Counting Point Mutations\n")

count = 0
hamming = 0

dna6a = Seq("TTTGGGTTCCACTTCTACAAGCAACACTCGGGATATCGCCGCGGTCTCCTTAGAAGATAGTAGCGTTTTTATAAGCTGCGAGAGTTACACGTGCCCGTGTCAACGTCCGTACGAATAGCGGAGCTATGTAAGTCCGTCTTCTCATTGCTCGGGGCCCGTCGTTACTAACGCTTCACTGTTAGGTACCATGTGAGCTTCTCCGTGACGACGTATGGGAACCAATATGCTGCGAGTGGGTTAACTCGCAGAAAAAGTTCGGAATTTAGGAAAGTCCAAAGACAGCCCGCCACTACATGCAAGGTGCAGTCCCACCGGTTATAGCGATGACGTAAGGTCCATATTCGCATGGGTCGCCGTAGATAGAATACTTTATTTTTGCGCTTGCGGACTTTGGTAGCTGGCGAGAGCGTGACAAAGCCACCTGGAAGTACCTCTATACGAGCCAGAGAATCTAATTCAAAAGATAGCAGTGCACTGCGCTTCGCCAATAGGTAGGTCTCAACCTAAACCATACCGCCCCCGGTTCTTGTCTAGGCTGCTGACAGCTTCACTCAAGATACGAGATAGATTCGATACGTGGATCCAGATGTATGTCCTCCGTAACGGCACTACCCGCCACAAAAACCCTTTCCGACGGAACGGACTGTTTCAGGACAGTGGTCCGGCGGTACCGCTCGTCTGTTCTCTTTTCCATGTGCGCGGCGGATCCGAGGAGCTAATACCTCTACGGTAGGAATCGCCCGGACCTGTATCACTAGCAACTCACACCAAGTAGGCAACGTTTATATCCGATTAGCTGATCGGCTGGGGTAAAATCTACCGGCCGAACAGAATTATCGGACTGGTAGATACTCACTAGAGTTATCCGCTTCCACGATCCCGTGCGCCATGATTACGTAGTGCGCGCACTATCTGACCCTAAGAGAATAACATCG")
dna6b = Seq("TATGAGGTTCATTGCCATTCGCAGCACTCGCACAATTTCCGCATTGTCCGTAGTGACCACGAGCGTTATGACTAGCAAATACATTCTCGCGTCCCATAATCTACTCTGGTACATATTACTCAGGGTACACACGGGGTAGTCCCAATTGTTTAAGCAGCTATTTTGTCACGGAAGGTTGTTAAGTACCAGCTGCACTTCTAGATCTCCCTGTCTGATAAGGGACCCACTCCCCGTGTGTTATGTTGCCTAATAGGTCGGGCTTATGTCCAAGTAGAAAGACGGCCAGCCATTGCATGCAACCCGTACTCATAACGCTTCTTACGAGTAGATAAGTAACAGACCTGGATGAGGCGCAGTGCACAGAAAGATACAATATTCCGCGTACGGCCTTTGAGAGATACCCAGCGGTCGACACAGGCACGCTGACTGGCCTTTCTGCGAGCCCCACCATAACATTCGAAGGTTTGGAGAACAGTGCGCTCCGGGCATAGGTAGAATCCAATGAACTCTGAACGCGCATGGTCTCTAGTCTATGGTTCTGCAAAACCCCAGATCTAGACGTGATAACATAAATATTAGGGACACGCTATATGCCCTTCGTAGTAAGATTGACTGTCACGCGAACCCCTATCCCCGATACCTACTGCGAGGCCAAAGAGAACTGGAGGAGCCGCTGTTCTGGGCCCTGCGCCATTGGCCCTATGGAGGGGGAGGGAGGGTATCTGTAATGCATGAACGGTTATGACATCCGTTAATTCCAACTCCATCTACTCTGTTGTAGTTGTTATCCGCAATGCGAATTGTCCGTGGCCCTGTGTATCGTCCCACCAGAATAGCCCGTCTGGTAGATGCTCCGTATAATTGCCGGCGTGATACTTTCCTGGTGGTATCATTCATTAGCTCTGTGAGTTCAGATCCTTGCACGTGCAATAATG")

while (count < len(dna6a)):
    if (dna6a[count] != dna6b[count]):
        hamming = hamming + 1
    count = count + 1
    
print(hamming)

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 7: Mendel's First Law
# http://rosalind.info/problems/iprb/
#
#------------------------------------------------#

print("Rosalind Challenge 7: Mendel's First Law\n")

k = 26 # DD
m = 26 # Dr
n = 24 # rr

total = k + m + n
total2 = total - 1

prob = k/total + m/total * ( (k/total2) + (0.75*((m-1)/total2)) + (0.5*(n/total2)) ) + n/total * ( (k/total2) + (0.5*(m/total2)) )

print(prob)

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 8: Translating RNA into Protein
# http://rosalind.info/problems/prot/
#
#------------------------------------------------#

print("Rosalind Challenge 8: Translating RNA into Protein\n")

mrna8 = Seq("AUGAUUACCCGACAUUGCACCAGCGCGCAGCCGCCGGAAGACACGUGGUAUACGAAGCACGUCUCCAUCCCACAUUCCGGGAUUUCCGUAAUCGCAAAUGGGCGUCGCGACGUGAGUACCCGUACUGACACAACACUGGGGUACAGUAACGUAAGGCACCAUCUUAGAUUACGUGAUCGAUUUCGACUGCCGUCGAUCCGCGGCGUCAUCUCUGAUACGCGAAACGACCGUUGCGUACACCCUCGUCACCGGUGUCCUUGGCGUAAGUGUGUAGCGCUUUCUCGAUACAGGAAAAGCCCUCAACGUCGCUGGCGGGUGGUAUGCACACAAAGCCGGAAAAUCACGGGGGUACGAUUGCCAUUUACGCUUGCCCGUACAUCUACCCGAGUUGGCCGGAAGUGUGGCGCACCCACUGCGGCCCAGAGUCGGACGGACUUACUAUCGCCCAUAAUUGCUACACGUGUCCCAUGCAACGCGCUUCCACUUGCCGACGAUUCUCAUUUGUCGGGACAUCACGGGAUGACUGGAAAGCAAGAGACCGGGUGCCCUGUGGCCGUGGAAAACGCGUCGGGACGAUAUGGCUAUGACGGCACGCCAACUAACGUGCAGGCCUUAAUGUAUUGCGCGGCGGUCAUCUUCUGUAUCUGGUCUUCAGACAUAAAGCACCCGAGUACUCGUAGUAUGGUGAUAGUUUACAGGUUUCCCUCAAAAAUAAAGGACGGUUGCAGCGAUUUAGUUGCUAUCAGGAGUCCCCCUGCGGACGUCACUCCCUGUUCCACGACCAUUAUAACUCUGCGCCUUCAUCUCCUCUCGCGUAAUCGGAGGGGUGUAAAUGCAUCCGCGUUCGAAGUUUGGCGGUCGGCGGAGCUCGCGCCCUCUCGCUCUCAUAGACAUUCUCAUACCUCUGACCCGUGGUCUGGAGGGCGAUGGAUUGUACAGCCAUCUAUCAGUAGUAUGUCGAUCACUUUGGGUGGCCAUGUGCGAGGAAUCACUUCCUGGAAUGCUUCGCGGCGAUCUGUCUGUGCUAGGGUGCGAUCAGGCAAAGUAUACUCGCUAGUUCGGGAUUAUAAAUAUUCGACGCUCGCCUCCGAGGUACUAUGCCAACCAAAGUGGGUCAGUUUCAUUUUUAAUAUGCGAAUUGCCUUCUUACACCCGGAGUCCUAUCACUAUCGCUGGCUGGUGUGUGAGCACCUUCUUACAGGCGUGUCCCGGAUCGUACCGAAGCAGUCAGCGCUGCGACCUAGUUAUGGUAUCAUUCUCUCCCCGCGCGGGCAAUGGGUCAAUCAUGACGGUAACCAUUCUCGUUUGUUCGUUAGGUUCAGUGUUUAUACUAAACCUUUCCACAGUAAGGGAGUUCAUGCAGGGGAGUGCUUGAAUGCAAGCGUCAAGCCUCCAUUCCCUGGUCCCUCUUUGCUUUCGACGAGGACUCUACGGAGGGUCGGAAUGCCGCGUGUCAUACUUACCAAUUUCGGUACGCUAGGGGACAUCCGUCAUAAUCGUCGAUUUCUAGGGUGCCCUAUCCUGAAACUAGUUACUGGCUGCGGCUCUAGGCUAAUGCUCCUUCCAAGACUAGGAGCGCACCGACCGGAACACGCAACCGUCUCUUCCAGACUUCCCGUUAAGGGUAAGUCAGUGUACUCGGUACCUGACCAUGGGUCCAUAGUAUCUUGUAAUCGAGCUGUUAAUACUGCCCCCUUAGUAGAGAAGAGGGCGGCUACAAAUGGGUGGAUCCGUAUCGAGUGCGAGAGUAACUCAAAUUUGCUUUCGCACCUAAUCGAAAUUGUUCUUGAGGGAAGGAGAGCGCCGCAAACGCCCCCGGGGAUUAACAAGCCCAAGCACUAUAACUCUCAGCGAUCCAGAAAUUUCUUGGGGCUGGAGAUCCUCCAGCCAGCUCUGAGGGGUGUUGUACACGGUACGUAUAUCCCGGUGGUUAUAAAGGGCGAUAUCGUGUUGAAGAUCCGAGUCUGUACCAUGGGCUUCGAGUUUUACGGUUUACGAGGGCCCACAUCUCGCGCCCGAACAGAACCCGUCGUGUCUAUAUUACAACGGCAAAGCCUCAUGUCCCGGGUUUCAUCGGCUUCAACGUAUGGCCCAACGCCAUCUUUUAUUAUUUGUGGCAUGGUGCGCAUGACACAAACAGUGUCUCGAGUGCACUCCUCGAGGCUACGCCUAGCGACAUCUUCCCCUCUGUUACGCGCGAUGACCGGGUGGAGACGGAUCUCCUAUCUCCACGACAGCAUUAUUGCGGAUCGUCUACGGUCAACGGUAAAGACAUGCAGCCGUGCCAUUCGCACUGCCGGUACUCGUGUUAGGCUCCGGAAAAUGAGAGACGUUCCGCCUGACCAUCGUUCCCACUUCACAUCAGAAUCGUUGGUCAACCGGGAAGCACCGGACCCCUACCGGGCUGUGCGUGACAUGACGUCUAAGUUAACCGCACCUGCAAAUCUUCUGGUUUGUCUGUGUGUCCUAUGCAAACGGGUUGGAUACUCUCCUCCGGGUCACGCUCCUUGUUGCCCUCAAUGGCAUGAGGUACAUAUUAUGGACGAAACAAGAGCAAACGCCAACUGCGCUCCUACUGCUUAUACUAGACGCACCCCUAGUAUACUGUUAUGGAAUGGGCAAAUAUACGGUCAACGCCGAAUAGCUGAACGUUGUCGAUAUACUUAUCGCAGUCUCCAGAUUAAUGCAUCUCCAGAAUUGUCAUUGGUAGAAUCGGCGAACUUUCUUGGGCUAAACCUUAGCGGAUUGGAGAGAAAAUUGUCCAGUUCAGGAAGGACACAAUCGUUACCUCUUAACAUCGAGUUUUCCCAUGAAAAAACGACGUGGGUAAGAAGGACCCACCUCACACAUCUUACUGGGUUGGAUCGCGGAUCUGCGCUGGUCCGCCCAAUAAAGGGAAAAAUUCCUGUCGACUCGGGGGUCGAGCCUAUCAUCUUCGUUAAGGCCGUAAUUUGCGUUGAUCACAGGAGCGCGACGCUCGGACGGGAUGGAUUAAAAAGCUCCUCCUAUUCCGAUCGCACACGCGUCGGUGGAAGCUACCCGAAUUCCCCUGUCUCUUGUACUGUGCAGAGGCCAGCGAUUUGGAAGGUCGCUACAAACGGCACUUCACUCCAUACCGAAGUAGGGACCCCUGCACAUACCGUCUGCUCAAGAGACGUUUCUACGAGCCCUCUUUUGGUCUUGCUACCCUCUCAAGCGAGAAACGAGUCGCAACGGAGCCGUCCCAACGACGCGGACGGUCGUUCGCCGCAGUCUCCUGCGGAGCGACGCGUGAAGUUUAGUACGUUCGGCAGUAUUCCAGGCUGGUCGAAGGACAACCAUUGCACUACGGCAUCCCACCCGAUCGACGUGUACACGAACAUGGGACCUAAGCCUUAUUUAUAUUCCCCAAAGGAAAGAAUAGCUACGCGUCUGAGUCUAACGCGCCAUAGCGUCCGCCCGAGGCAUUUGAAACUGGGCAAGACGUGCACAACGCAAGCUUCUAAGCUGAAGGGAAUCGACCUAGGUGGCACAGAGGGCGGUAAUCAGAUGCCUUACGGAGGAUUAAGCCAUAAACAGAAAGGGCGCUAUCGAUCCCGUACUAAGUCACUCAGGCUAUGGCGUUACAUCCGGAGAGACAUUUUGAGGAAAUAUCGAAAUGGCGCAGUUCCCUCAGGCCAGCUCCCUGACACUGUUUCGGCUGUUUUCAUGCGCCUCCUCUUACAAGACCCCGUACGUGAGGACUCACCGUAUAUCACACAAGACUAUUGGGGUUUCAGCCCACGUCGACCCUGGCUUGCAACAAAGGGUCUUCACCUCCGCAGCGACGAGUUGAAUGUACACCCUGCUACGGCCAGCGGGCUUGGAAUUGCAUACCCUGCGCACGGCGACUUGAGAUUAUCGAAUGUAACAAAAUGGCUCACUGACCACCAGCAACUAGCAUGUGAAAUUCGCACGGGCUUAAGGCGAAAUGACAUGCUUUCUCUAUGCGACCUGGCACAAUUUAGAGAUCCGUUAGCCUGCUGCAAAUCCUCGUCUUCGCUCACCCAAUGGAUCAGAUACAGUCGCUGUUUCGCUCAUCACCCGCCGACGCUCAUCCCAAAAGUUGGCAGGUUACCGCAUUCGGUGUACCCUACGCUUGUAGGCUGCAAAAUGGGAACACAGCCCGGCCGGACGGUCGCGUUUACAACCGGCCGGUGGAUCAGCCUGGUUGUACGAAUGUCAAGUUCACGAUUGGAAAGCAAGUAUGCUCGCCGCAACUCUACUUUGGCGGAGCCCGACCGGCUGUUAGGACUGACUUAUCAGGACUCAGUCUCAUCUUCAUCCCUUCCGGGUCAAUGGUUUUGCCACUUUGGAGUCGUAAACAAUAGGCAAAACUCUGGUGAAGUGGACAAUUGCAACCGGAUCAACUCUGCUUCCCGUACCCUGUGUUUAUGCUACAUGAGGUGUCUAUGGAUCAUAACAGCGUGCCGUGCUAGAAGGCGAGGUCAGUGCGAGUUCCCACGCCAACGCCUACACCGCGGUCCAUCCCCAGGGAGAGGUGUUACGCGAAUAUCCAAUACGCAGCACAGGGAAAUCGAUCCUAACACGACGUCCAGCAUCCCUCAUCCACACCCUGGAUUUGAUCGCGCCGGUGGCACCGGACAAGUCAAAAGUCUAGCUGUGAACCUAACUUUUGCUCAUAGGGCUGACAGCGCGCACCUUCAAUUUGGCCGUAGGCCCAAGGUGGUAGCUAUGAACACUCCAGCUAAUGAGACCAUACCGCCCGCCCCGAUCGCGCAGAUUCCAGUUCCGCGGUUAAAGCUAUUUGUUAUGUCGCAGUCGUCUCCAGCAGUGUUACCUGCAAUCGACUAUGAAAGCCGCGAUUCUUAUGUUCAGCCCAGCCUCAGUUCUAAAAAUUCCGACGAGCCUCUUUAUAGUAUCGGCGUAACGAGUUGGAGUCGGCGCGUCAAGGUUAGCGAACAGGUGCCAGGUGCCUCAUUUAGUAUGACCACUCACCAGCAUGCCCACCCGUCGUCGUACCGUUGUUCGGUAGCUCUUCCCUGGGUUACUAAUCCUUUUGUGACUUCUAGGUGGACCUUGUGUGGCUUUGAAUUCGUGGUACAUGUUGACCUGUGUUCGGGUCCUAACAAAGAUCGCAUGUCCCGACAGAACCCUCUCCGCAUGGGGGCUAGGCUGAUCGUAUACAAACCAGGGGUUAGCAAGACACAAGAAACAGUCGUGACGGUUGGGUCUAUCUCUGAGCUGCCUACAUCCUCAGGGGGUCGGCGCCGUGUACAGAUAGCUAUCGAACACUAUUUGCUGUCUGCACAUACUAUAACUCUGUCGUGGUUGAUCGCGAAGGGACCUUGCCACCGUCUCACAGGUGCGCUCUCCAAUAGCUCGCAACCCGAAUGUCAUGCAUCAAUUAGGUGCGGCAGGCUAUUGGCGGCGAUCUCCUCGUUAGUACCGUGCCAUUUCAGUGCCGCGGAGGUGAAUGAUGGAGUUGUCGGCUUAAAAAAUAGGAUUCGUCUGCCUUACUUUCAUGCGCACUGCGCGUCCCAGAAAACUAGCUGUAACAAUGUGUAUGUUAAACCCUAUUGGGAGGCGGAUCAGUGCAAUACGCUGCGCAGUGAAACGCCACCGGUUCUGACUCGUGUGUUGAUGAAGCAGACUUACAUCGAUACAAAGGAGUAUAUCAUUCCCGAAGAUGCCUUGAACCCCUGUACAAGUCCAUGGAGAUCUUCUCCGACAUUGAGGCCUGUGGAUUACAAUCGGAUAAUUACCCCAACGAGGGUAGAUGUCGUAUCAUGGGUGGCAUUUGUCCCGAACCUCCUCCGCUUGAUUCCUUUUGGGGCCCAUAAUUGCAGGCCCCAAUAUGUUCCCACAGGCGAACUCGGUGGGAAACGCACACAAAACGCACAAUUUGUAGGCCCAAAUAUCUGGCAACGGGCUCGGUGGAGAUCCAGAACGGCGGGGUACUUAGGAGCGGGAGGAGGUCAUCGGCUGGCUUCUAACCUCAUCAACUUGUCGAUUCGAGUUGACACCGCUUCCGUCUCAGCUCGACGCAUGGAUGACGCUGUGAGGCAAGGAAAAAAGCAACGUGGCGGUUUAAAUUCGGACCCGAAAUGCGCGGAGGACAGUAUGCCUUACAACCCAUUUUUAAGAAAACCUUACGAUGAGGAUAGGGAUUUAUCCUGGUGUGGGAGUCUGCAUUCCGACUACCGAUUGGCCCGUCAUUGGCAUGCUCCCAUCAAGGCCCGUUGUCGCUCUCUAACGAGGUUUACUCAAGUUGACCUUGGGUGGAUGCAUCUACCACAAUGGUCAACCUCGGUGCACUUUUUAGUUCGUAGCGAUUUUUUUAGAUGGUGUCCCAUCGAACACCUGCAGGACAUUCUGGGGGAAGGACACCUCCUCAUUGCAUCACCUGAUGGGGAGUUUUGGGUAAGGAUCAUCGAACGUAAUAGCUCCAACACAAGCAAGGGCGAUAUACGAGCAAACAAGAUUGGCGCGACGCGUUGCGCAAGAGAAUGUAAUUGCUUGUCGAUGCGCCGCAGAUAUCCACGAGUCUUCAUCAACAGGAGCGCCUUCGUUGAGGGGCGGGCCUCCUACUCUGAGACUUUGUGGCUGGUCACAGACGUUGUGCCCUCAGCGAGAUCCGAUCCUCACCUACGAGAGCAUCACAGGAUCCUCAGGGAUGGAGGCAGUGUCACCGUUCUUGAGCAUUACAUGACACUACACCUUCGCGGCACCAGCACAACUCACGCAAGCAGAUACCGUAGUACUUGCCGAUGGACCCCAACAAUAGUCAGCAGGAAGCAGGUGGGGAUAACGACAGUAAGUCGGCCUGAAGAGCAUCACAGAAUGCAGACCACGUUCCUAGCAGACUUGGUCUUGAACCUACCGUGGAUGGACUGCGAGCGGAACUUCGCUUCUAACAUGAUUGGAACCGGUCACGCAUUUCCUUCGGUGCCAGCUAGCGUUGCUAUGGAUGACACUUUGAGUGAUACGGUGAGUGCCGGCAGCGAAGCAAAACAGGCGGUGAGGCUGGUGAAGAAGAUAAGCUGGACCCUCAUAUUUGGAGCCGGAAAAAGAGCUCGUCUGCUGAAUGCUACAAGACCUGCCUUUAGACUUAAUCCGUAUACCGUUACCGUACUCCGCUCUUGCUCGGUCCUGGUUAGGCCGAUAUGCAAUAAAUAUUCGUCGUCAUUAAGGCGGUGUGCUAGUAAUCUCGAGAAAUUUAGGCAGAGACCGCUAUCCAGGGUGGCAGUUAAACUGGCUGAUAGCACCAUGGUGGCAGAUAUUUCGGAUCUCCGGUUGUUCCAAGUUCCCGGUUGCAAGCGGAAUCUAAAGUUGGCGUAUUCAGGGUUUCUGGUCGUCUUAAUGACUAGACAUGUCUGGAAAUUGUUACUUUUGGAAACCAAAAUUUACAUGGCAGUGUAUAUCUACACACUAACUAUAGAAGUACCGACCCUGUUUACCUUUUCAAAGGACUAUCCACAGAGUGGGUUCAGGUUGAUUUGCUAUGGCGCUACUAGUUCCGGGCGUAAGCACAUAGCUUUGGAUAACCGACGAACCAAUCACAGAGACUUGCGGGCCACGGUGCCUAAGCCGGCAUCUCGGCCCGGUAGGGGAGAACUCGUUCCACCGCUGAUUGUUACUCGUUGCGCAAGUUAUGUGCCCGCACGAUCUGUGGGGACAUUAAGGGGGGGCCAGACUACGUGCUUCGGUAUUAAGCCUGGGGUGUCUGAUGGGCCAAUGCUGACCGUAGAUCGCUACGUGAUACGCCUAUAUAACAGGGAUCCACGUCCCGGGGGCUGCCGACAAAGGGUGAUGGGAUUAUGCGUAUCCCAAAUCUUAACAACCGCCCCAGAUUUAUCCGUCCGUUUUGGGCUGCGUUUCCUGGAAACAUUAAGGACAAUCUUGGAUGUACGAGCUCGCUUGUUUAUCGAACGCUCACUUUCGGGCAUAUGGUGGGCGCUGGCAAAAGGCGUAAGAGUGCUUGAUCCCUGCUACUCCUCGCAGCAAUACUUGCUUCCGAUGGGAGUAAUAAUAGUGCUGGUCGGGGGUGUUGGUGAUUCUAUAACUCUACGCAAUCCGGUCUAUUACUCCCCUCUAGCCGCUGAUUCCUGUCCUAUUAGUUUUCGUAAAUCUAGUGCUAAGCCUAAUCGUCCCCAGUUCGCGAACGUCGUCUCCAUAUUUAGUUUUUAUGAAAUGUUUCGUUUCUGUCCGCGAAUAGUUGCAACGGUGUUCUCAAGGGCUCGAAUUGGUACAAUAUUGAGGUUAAUGGUAUUAUUCGAAAAUGCUAUGACGAGACUAUGGGAAGGACUCUCCAGCGGGGGGACAGAUUCGCCGAAGUAA")

print(mrna8.translate(to_stop=True))

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 9: Finding a Motif in DNA
# http://rosalind.info/problems/subs/
#
#------------------------------------------------#

print("Rosalind Challenge 9: Finding a Motif in DNA\n")

s = Seq("ACAAGCTGAGTTGCTGAGTCGCTGAGTCCGCTGAGTATCGGCTGAGTACTTGCTGAGTCAGCTGAGTGCTGAGTCGCTGAGTTAATATGGCTGAGTAGCTGAGTTACTAGCTGAGTCGCTGAGTGAGCCGCTGAGTCACCGCATCGTGCATACGCTGAGTACGCGCTGAGTATGCTGAGTGCTGAGTCGGGAGGAAATAAAGCTGAGTTGCTGAGTGCTGAGTTTCTGCTGAGTGCTGAGTGCTGAGTGGCTGAGTAAGAAGCTGAGTAGTGCTGAGTTTGTCGCTGAGTGCTGAGTTCGGCTGAGTGCTGAGTGCTGAGTGCTGAGTTACAGCTGAGTAGAAAGGGGCTGAGTGCTGAGTAGCTGAGTCGTGCTGAGTCGCTGAGTGCTGAGTAGCTGAGTAGGCTGAGTAGCTGAGTGCTGAGTGCTGAGTAAGCTGAGTGTATCGGTGGCTGAGTAAGCTGAGTGCTGAGTTGCGCCGCTGAGTCGCTGAGTTGTTGCTGAGTCGCTGAGTGCTGAGTTGGCTGAGTTGAGCTGAGTCTTGCTGAGTTTCGCTGAGTGCTGAGTGCTGAGTAGAGGGGCTGAGTACTGCTGAGTGCTGAGTTGTATGCTGAGTGCTGAGTGGGCCGCTGAGTGCTGAGTGAGGGGCTGAGTGCTGAGTTGCTGAGTAGCTGAGTGCTGAGTGCTGAGTGCTGAGTGCTGAGTGCTGAGTGCTGGCTGAGTAGGCTGAGTTGCGCTGAGTGCTGAGTTGGTTTGCTGAGTAGCTGAGTGGCTGAGTATGCTGAGTTCGCTGAGTGATCCTCGGCTGAGTGCTGAGTCCGCTGAGTGGCTGAGTGCTGAGTATACTGCTGAGTGCTGAGTTGCTGAGTTTAGCTGAGTGCTGAGTGGCTGAGTAGCCTGCTGAGTGGACGGTGCTGAGTCCCAGCTGAGTAGCTGAGTGCTGAGTAGCTGAGTGGCTGAGTATTCAAGCTGAGTGCTGAGTGCTGAGTGCTGAGT")
t = Seq("GCTGAGTGC")

locations = []
count = 0
loc = 0

while (count < len(s)):
    loc = s.find(t, start=count)
    if (loc > 0):
        count = loc + 1
        locations.append(loc + 1) # adding plus 1 since the result needs to be in count from 1 format
    else:
        count = count + 1
    
print(' '.join(map(str,locations)))

print("\n---\n")


#####################################################################################
#
# Rosalind Challenge 10: Consensus and Profile
# http://rosalind.info/problems/cons/
#
#------------------------------------------------#

print("Rosalind Challenge 10: Consensus and Profile\n")

dna10_1 = Seq("TAAGGCAGGACATAGCTCGGTTCCACCCTTACATCATTTGCCGTTTAATGAAATCGTCAGTTGCCATCATTTTTGTCTACACGCTGGGACTGCATTTTCCGCGCGCCTTGGTAGCTCCCTATCGAGTTGGCCAGGCGTAATGGAAAGTGGTTTACGAGCCTGGCAGGGAGGCTATTGAAGACGATACGGATGTTGGACCGAAGTAAGAAGTCCTTGGCTATGAAATCGCCCTGGACTTGTGTTCAATAGGCCTCCCGTATGCGACATGTATATTTCCGCTGTCAAACTACCGCCCATTAGTCCATACGATGCCAATGGCGTAGACTCCTCGATTAAACCTCAGGGCGCAGCGCTATCTGGGGTAATGGTATGTAGTCTGTACTTTAACCCAACAAGGTTTATCAGCCATATCTGGCGCGATAAAATGGACTAATGACGTGAACGAAGCCAGCCTTTCAAGTGCTCGTTCTGCCTGCAAACGTTTAAATCTGTTTCGATGATAGACCAAATTTTATCTGTAGGCTCGACAACCCAATGGTGCGACAGTGGGTAAACCTCCCAACGGCACTAAGAGGCCCGTCCATATGTTGAAGATCACTGCCGTGTATGGGCGCTAAGTCCAATTGTGAATTGGTGTTTTCGACGTTCCTATGGGTGCCCCGCTCGGTAGTCTCATATTAGCTCTACAAGATAAAGACTTTCCGCTTAACTATGCGCGTCCTGTGATGTATTGTTGTTGCCCCACCAGTGCTGGTGCGTCAAATACGAACTGTCGCGAACGCCTGGGGCAAAGGGTCGAAACCTATTTGCGGCATTCAGTGAAGATCTCTACTCGGCGTGCGTTGTGCTCGACTGTAGACTCACTCTTCCCGCTTTTTATTAGCTGAAAAAGCCGCGTGTCTCCAACCTTATGAGTATT")
dna10_2 = Seq("TGCAGCTGGTCTATCAACCCCTGCCCGTGATATGGCAGATGCCTCGGAATGTTTCTCTCCTAGTCCGAAGGTTACGCCGAACCTTCCACGCGGCGAGACCCACGGTCCGCAGCTACCGATCCTGGCTAGTCTGTCTATTTGATCAAGCGGCCTACCCACTTTGGCCCCGCGGCCTTGGTCGATAAATCATGTCTGTCCTTCAAAACTCCCAGGCCACCACAAAGTTACAATTGGTGCTCGAACACCTGTATGATTCGGTCGAATGCCCTCTCGCAATATTCATCCGCAGCAGATATCGGACGCCGCTTAAACCGGGTAGAGATTACACACTTATTTAGAGCGTATGAACATGAACTATCTAATCCGGTAATGCACCGAGGACGAGCTCTAACTTTCAAATATGCTACAGGTTACATTTCCTTATAATAGAGGTAATGCTTGAAGTACCATTGCAACTATTTTCTGTGGAAATATCAACTAACTGAGAAGGATGGTATAGGGGCCGTATGTCGGTTCCCTCTCCAACTCCCGGCACGTGGCCAGAGCCGTATTGGGGAAATCTTACATTGCCCCGAGTGCACGCTGGGCCAACCATCTCGCGGGTAAAGGGCGGGAGACGATGATCGCGGGTGGTTGTCTGCAATTCGATTTGGGAACATACTCTAGTGTCATTGAAATTGCGTTAACGCGGACGGTCATTGCCATCACTACGGAACATAATTAACATTCGTCTTCTCTTTGTGAGTTTAGCAGAACAAGACACGCCTTTGCCACATTCCGATGACTCGGCCGGGGCGTCTGGCAGGAGGCATGTATGGAGGGCTAAGCTATTCCTCTCCTTACGAGTCCGTTAGGGCGCCTGTATTTATGACGGTCAGGGATCGTCTTCATAATTTTAAATTTGCCCCAATACAACTTT")
dna10_3 = Seq("TATCCGTTGGGAAGCTGATACCAAATGCAAGAAACGGCCATCCAGACCTCCTGTATTCTTACTCTCGATGGGCACACATAGAAGTTTTTACGAGCCGCCACGCTCAAGATGAATGACGACCGCATCACGTTCAAGTGCGATAGGCGCCCATGGCTATTCTAAGCTATAACTCTTGGGGCCCGTTGCTTACGGTCCGGTCTGCCCTTCAGATCGAAGTTCTGCGATTTCTTATTACCTCGGAAGGATCAGCCGGAAGCGACCCCGCTGGCCATCTAAATGGTAATGGGAAGCTGGCAAGAACATTAACCCTGTAGTCATTTCTAGACGTAGGCACGAATAGCTGACACTATACCTTCGCATAGGACACTGGCCTGTACAGCGCCGTTGCATGATCAGTGCGTGCTTCGCCATGTTGAATCGCGCCCACGAGAATGCACATTGCTTACTCCCCAAATATTTGCTTCAGTCGGGACTTATTTAGAACAGGCTCGAGGGTGTGCAAATCGCACTACGTTCCCCAGTGGTACTGCGAAAAATTATGTACCAGAAAACCTACCTTATTCTGTAACCCTGCTACCTAACGGGGTTGATCGTTTGGACCTGGCACTTATCCGCAATAGCTCGTGACCTCCCACAGAAAGTAGATTGGCTGTTTCTTTCAACTCCTGGACTTAATGCTTGGTGCCTAACGTCCCCCAGAATAACCACACGACTATGTGACATATTCCGAATATTAGTGGCTTGGGTATGCACACTCGTGTAGCGAACCTATCGGGTGGGTCGTCTCTTCAGAATTCACATTCTGTCCTCGCTAGGGGAGAGTGATCTCTCTCGAGGAAGAAATCAATCCGATGCGGACTTAAAGTACAGGTAGTCGGGGCTGGCCCGACGCTAAACTAATTTAATTATCTTAATGGTT")
dna10_4 = Seq("ATAGCCCATCTCGAAGTTAACTAATTCAGAGTAGATAGACGGGCTCAGATAAAAAGCTACTTGCCGGGGCGCTGAATCGAACTTTCTGTATCTTAGCCAAGACATTGGTAGGATGCAGAGTGCAGTCTTTGGCAACGGATACCTCGGTCGATCACTGGCGTCCCGCAAAACTGCGTTAACTCGCACAGGAAGGTTGCGAGAAGAGGTCATGCCCACGTACGTTACTTGCTCGCACTCAAATAGGCCACCGCTAGCCAGGTCAAAGCGTTTGACACGAAGCCCAACCCGCTTCTCAACCGTATCGTCAACACCGTAGTAGGCCCCCACGGCGGAGTCTGCTTTTCCTTCGGTTAGTTAGCCCCAGAGCTACTAGAGTACCGTACGCCCACAGAAACCGAAATCTCTAGGCACCTTCTCGGAACACTTTCTTCACCTCCCCTACTCTAGAAGTTAGCGCTTTTCAGCTTTTTCCAGGAGCTAGTCGTCTCCATTTGCCTCTCCGTTGATGTGTAGCTTCACATATGGGCCTTTCAGGTTTGACCTATGGCGCCGGTCGTCCTATGAACGATAGATGTCTGTTCGGGAATACTAGTATAGTCGAGTTCCCCCGTTACCATGTACTGGTTCGCTACCTAATTCCTAGCACTGCCCAAACCTGTGAGTTAACATGCCGGGCGTCAAGTAGGCGACCAGTCGGCCTCTTACCGTACTTAGGGATGAGGACCCATACGCCGTTGCGGTATCGGAGGTGTGATCGCTTCCGGTTGAGGAGCGTTTATTGTTCAAAGTACTCACCGGTCTATGGAGGTTTTCAGAAGAATTCATATCGACGCCCTGGCATAAAAAGCGTACTGAGATGCGCTACCGTGTCTGAATCCAAACCCTAGGCCAGCCGCCCATGTTAAGGACATTTTCGTAA")
dna10_5 = Seq("AGAGGTTAGAAGGTGTCCAATTCAGAGCTCCCTCGCTTGACCGTTTACAGCCAGTAGTAGACGAAATCCTTTTTGGTCGCCGGCCAGAGGTGTATTTGTGGCCGTCTCGGCATCAAGCGTTATTCTGGGCTTGTGAATATCCCTTAGTGATGCTGAACCAGGTGAAACATAGACCTTCCTGCCTGCCGGGGTTCTTGATTGTCAACCTGGTTTTAGTCCCTGGCTTGCAATATTAGACGCTTCGTATAGTCTACGGCATCACCATAAGCTGCCGCACCTACTCCTGCAGCGATATAGAAACTGTTTCCACCTTCCGCTACCGAATGGATGCTCGTCTTACACGCTAGTCTTGGTGTAATCCGCCGTGTAAGAAAAGCCGACGCAGGCTTCACACAAAACTACCTTACTCTGCTCCGGTTCCATCTCCTTCATAACAGGCTATGGAGAGAGTTCCTTTGATGACACATCCCACAGACGGTGCATATAAGCCGATGAGAATAAGCATAGGTTACAAAGGCCCATCACGATCACGGGTCAGGCCGATTGTAGAGGGAATGAGTTCTAGTGAGCTTGACAGCTACCCTCCTGTAATTAAACTCGCGTCTTATAACCGTGTTTGAAGAAGATGCCCCTAACAGCATTACCCATATGAACCTAGTTCTACATGTTACCCGAGTCAGGTCGTCAAGATGCGCAGTTGGGTGTTTATATCATTCCAGCTAGCTGGAATGCTTTATAGCTTTAATGTTGACCGTAACGTCCATATGGGGCTAGTCGGCTGCTCACTAGAGCTCTGTGGGGTGCAATCTTACTGGTCCCAAGGGCAACCAGACCCGTGGGAATGATGAAATACGGATTGGATGCAGATCTGTAGAGGCAGTCAATGCGCTCTATAACTGTCGATACACCCCTCTTCCGC")
dna10_6 = Seq("CTTTGCGAGACCAGCAGTGAACTGGCAGCGAGACGGGGTAAATTTGGCCTAATCTTGGTCGTCAGACCTAAGCTCATAATGGACTAGGGTATCAAGACATCTGCCAGAAAACTCCGGGCGCGCTACTGAGTATTAGGCTGGTTTCGCCTCACGATTTTTCTTGATTCTCCCAGTTTAAAGTTGTACGTAGGGAACTCAGCTAGGTCAATTCGGTAGAGGGTTCTGTTCGTAACTCGAGAGTTAGCCAGTACAAGATCGCCGTCCGTGCATGCACCACGCGCACTCACTTGGCAAGCTAGAGTGTCGACCTAAATTGAGGAAGTGCTCAAACCCCCTGCAGTCAATTGGAGTGCATGTGACATGCTGTTCTGAGCCTTAGCAGACTGCCTCTCTTACCTAGTCGGAAAGGTCAGTGGGTTATTCACTATGGGTGGAATCCCTTTTTTCAGGCACGGTCTTGTCACTTTGTGGCCCCTTTAAACATACGACATTCCAGTGTGGGAAGTAACCAACCGATATAGTCCACGGTTCAAGCCTGGTAGGGTACGTAAATACCCTCATTACCCGAGAGCACACCGAACGCGGAGAGAACACTTGTTATTACGTGCAGAGGCTAAATTGAGAACACTGCTCAGGAAAGGTAAGTAAATCATGACACAAGGGCGCCTGTATCCCGACGACAGTCAGCCCAAGTAAAAACGTAATACCGGTGACAGCCGAAATACAAAGTACATACAGGGCGCATTGCGACGTAGGCTTCGGGCGTCCGGAAATCAATACGGGTAACTAATCGTTTATCTACCGATCCTCTGTAGTGCGTTTGACAAGTCTCTTCGTTAGCCGTTATGTTCTCTCTTTCGGAACGCACATTGTTTCGGCTGTAAGGTCACCACCGCGATTAATCCCCCTTGCGATTTAT")
dna10_7 = Seq("CCTCGTTACCGAGTCTACTGCTACGCCCATTGGACGATTCCGGTATACCACAGACGGCTTACAACCCACGGTAATACCCGGGGACGATCCAGACAGCGCCGTGAATATAAATCTTCGAGTACCCAAATCGCACAAGTAGTTTCGGAGACTGCCCTCATTATGCTCTACCTGCCTGCCCCCTGGTTGTATCATGCCGTTTTCACCGGAAGCCGGGGCCTTGGGTATAGAAGCCATGACCCCAGCAACGCAATTCATTTTGGAAAGACATGTGGGGGTTCTCCGACACCCCCAAGGGGTTGCTCAGGGAAACTTAGCACACTATGCGGCTTCTAAATTCCCACTGTTAGCCGCTGAGGACGCGGCGTGATAAAGCAATTGCCTATAGCAGTAGTGTGGCATTAAATTCAGAATCACCTGACCAACCCTCTCGGACCAGTGGGTATAGGTTCTTCAGCCGCGTTGCTCCTTGTTAGACTGAAACCTCAAGCAAGGTAACCTCAAAGTAGTGAACATATTTGCACCATCGCAAGCACCTTTCCCGAGTACCTGCGAGTTTTGCGGGGAGGGCCTTTGTAGCGATGGGGGCAAGGAGTCGTTATAAACGCACGACCGGTATAAAGATCGCCAGGGCCTTCGAAGCGATGTGCGCAACGTCCACTGTCTAGTAGCAGACCGTCCCGCGACCGCCATTCGTCCGGTGACTACTAGACCCGGACAATGAACGCGATTCTGGCCGAGCGACTCAAGCCTAGATGGAGGTGGTAATTTAATGCTCCGAAGTGCGAAGGAGCTACAACCCCCCTCGCTTGGTTTCAGCGCTCGCTCTGTATGTCGTGATTATTCAATGCGTTCCTTTCACTATATGACCATTGACCACCCACGCCTACTAATTAGTGGGCGGCTCCGTCGTTCACCCGCG")
dna10_8 = Seq("ACGCCCATCTGGCTAGCGCGTCCCGGAGTGATGTGCGTCGGGGTATTGCACGGAATGCAGGGACCCCGAGTGCAACGCTTCATCCGTTAAATTATCCCGATCCCAAGTGCGTGCTTCCCTGTTGCGCCCTGTTGCTCATGTGAAGACGGAAATAAACACCGTAATAACGCGGTTGCCGACTCGAAATAAACCCCATCCATTTCTATCGCCTTGAACCTCAACCATATATAGTCAGGGCAACAACTATGGCTGGTCACACAGCATTTACCTGAAGCCCGAAGCCGCCATGCCCGTAAAGGGTTATGGTGGAATGTGGTAGGGAGACGATGCATGGGTAGCCAAACATCGTAGATCTTATGGTTAATCTAACAACTTCCGATGCTCAGCAGAAAGCTCGGTAGACCAGAATTTGGGTCATCTTGGCTGTTTGCGTAGTCATAAGGATGGCAGCATGTATTGGTGAGCCTTGCGACATTTTGAGGACTCTAAAGTATGTTGGAACGCTGATTTGAGGACCGAATAGGTAGAACAGGTTTTGAGTGTTCTTCTATAAACATCGTTCCAATAGGTAACACATGTAACTGCTAGTAAGTTTCTGCCACACTAAGAAACTGCCTGTGATGAGATCTCCAACGGACAGGAGAATACTCTATGTATCGTCAATTTAGAACTGGTTGCTAACTAGCTCCGTCCCGAAGCGAAGGACGAGGGTGTGTTCTTTACATCACAGCGGCTGCCAGCCTAGGTTTTGACCACCGCGAATATGACAAGTGACCCCGCTGAGTCTCCATATGTTTTCCCGCGAGTCGGACGCTAAGTAGTATTCCTACTCTGCCTATCAACGTCGACAGATTGGAAACCCAATGTTGCATCAATCGTCAGCTGAGCGATCGGTCCACACAGGGCTGCGCAGGCACTC")
dna10_9 = Seq("GCCAACAATCTGTCTGCCGCGTAGCTATCGGCCAACAGACTGGTGCTAGGCCTCGAGAATAAAAATGTTAAAGTGGTGGTACTATATAAATATGATCGATTACCGAAGAGCCAAACCACAACTCTGTTGTAGGTGAGACATGCAGGATAGCAGTAAATATATCAGTGACCGATACGGGCTTTCCATGAACCCTTAGTCATTAAGCGAGACGCACCACAGTACAACAGTAGTTCGCGTAGTATAACGTCCCCAGCATCCTTTTAAACGGCGCTACAATACAGAAATCGGGCCATCTAAACGTGGAGGATCAGTGGAGCGATGATTCCTCTACCGTGCGAACACTGTGGCTCCATCTCCAAGGACAATTGAACCTAGTTCTTAATAGTGGTTCTCGTGGGGACATACTAACATTGTGCTTTACTCCAGTTAATCGCCCCGGCTTAACCGATATGTCTGTATTCGACCCCACCACCTCCGGTCTGGGTTCCTAGCACAGGTAAACCACTCTATAGCCCAGTCAGCCACCCTAAGAACACTGCCATTATCAATCGGATTAACCTTGTCACGATCCACCACTTCTATTAATGTTTGAGGAACGCCGTGAGAAGGGACGCGAGCCGCCGCTGGGGATATCTCATGACTTCTATATAGCGTGGACATATTTCACGTCTTACTACCAGGATACATCCGAGTCCCTCTGAGCAGAAAAGTCATTTAGAGGCGCCTGGAAGCTGCGAGGCTGGCAATACTTGCTTTATGAAGGAACGCTCTAAACGAAAACACACTTGGATGGCGATGGAATACGGGCTGCAAGGAGAAAGAACCGAGTACAAGGTCCGTTCACCAATTCTTCTGTGCAGCGAGAAACCTTAGCGAGATGTCGACACTCGCAATAATCACTTGAAGGGCCTGAGGATAT")
dna10_10 = Seq("CGACTTTGAATTACGTTGCAGCCTTAAACGTACCAGCCTTGCATAACCAAATCGTCACGTGCCACGCTAAGTTGCCAGCTAGGCGCGTGACGAACATGGGCTCCAGTTGTGCTTTCCGGGAAGGTAAAAACATGAGATCTGTCTCGTTTTGCTAGATTTTATGAGGCAAGCAGATCCATACCCACCGTTAAAAAGTCACGCGGGACCTTGCGCTACAGAGTAGTTCGCTAGGTGGAACATCGGCAATCTCTTGGTCTTCCAGTCACCACCAGACTATATGTACAATCATAAAGACGGGAATTACATGGCTGGCGCGCGCGTACCAGAGGGCCCGTTCATGTTCCACCGCTTGTCCAAGGTACGCGGAAGAAAAAGTAGGGTTGACTGCCAATTCGCACCTCCTGAATATTATAAACATCTTCGAGTAACGATTACGACCAGTCGGCCTTTCTCAGAGGGGTGGCCGGATCAATGGCAGAAGATCCACTGCTAGCTATCAGTATCTACGGTTCGCGCAGAGGGCGCACCCTCGGCGGGCTCCACGTCGTTGGCGGATTGCAATAGAATGTCTACCAGATCGCTTATGGATGATCGTAGTGCCCCTCTGGAGGTCGGACTTCACCTGGTAACCGGCTATGCCGTCCCGGCGCTAGTACCACTTGGGCATACCGAGTGCCTTTGTGCTTTATGCGTTAGCTACCTCCAACATGATGCGTTGCAACATGTTCGCCTATCAGTGGCCAGTGTTGCGTGTGCACGCGTTTAATAAATAAATGGGAGAGCAAAGTAGTACGAACACTGGTATAACTCGGGCGGATGATGAGGGTCCACCAGCTTCATGCAATTTGCTTATATTCCGTCTGTGGCCTCTCCACAACAACAGTGTCGGTCCCGTAATACCTCTGTCCGACGGTAACAT")

sequences = [dna10_1, dna10_2, dna10_3, dna10_4, dna10_5, dna10_6, dna10_7, dna10_8, dna10_9, dna10_10]

length = len(dna10_1)
pos = 0

aRow = [0] * length
cRow = [0] * length
gRow = [0] * length
tRow = [0] * length


while (pos < length):
    for sequence in sequences:
        base = sequence[pos]
        if (base == "A"):
            aRow[pos] = aRow[pos] + 1
        elif (base =="C"):
            cRow[pos] = cRow[pos] + 1
        elif (base =="G"):
            gRow[pos] = gRow[pos] + 1
        elif (base =="T"):
            tRow[pos] = tRow[pos] + 1
        else:
            print("error1")
    pos = pos + 1

consensus = Seq("")
aCount = 0
cCount = 0
gCount = 0
tCount = 0
maxCount = 0

pos = 0

while (pos < length):
    aCount = aRow[pos]
    cCount = cRow[pos]
    gCount = gRow[pos]
    tCount = tRow[pos]
    maxCount = max([aCount,cCount,gCount,tCount])
    
    if (maxCount == aCount):
        consensus = consensus + "A"
    elif (maxCount == cCount):
        consensus = consensus + "C"
    elif (maxCount == gCount):
        consensus = consensus + "G"
    elif (maxCount == tCount):
        consensus = consensus + "T"
    else:
        print("error2")
    
    pos = pos + 1
    
print (consensus)
print("A: " + ' '.join(map(str,aRow)))
print("C: " +' '.join(map(str,cRow)))
print("G: " +' '.join(map(str,gRow)))
print("T: " +' '.join(map(str,tRow)))

print("\n---\n")

#####################################################################################
#
# Rosalind Challenge 11: Mortal Fibonacci Rabbits
# http://rosalind.info/problems/fibd/
#
#------------------------------------------------#

print("Rosalind Challenge 11: Mortal Fibonacci Rabbits\n")

n = 84
m = 17

ages = [1] + [0]*(m-1)
for i in range(n-1):
    ages = [sum(ages[1:])] + ages[:-1]
print(sum(ages))


print("\n---\n")

#####################################################################################

