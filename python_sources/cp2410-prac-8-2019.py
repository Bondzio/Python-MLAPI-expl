#!/usr/bin/env python
# coding: utf-8

# In[ ]:


Question 1
Hash table
[],[],[],[],[],[],[],[],[],[],[]
First, we compute the hash vale of each key:
h(12) = (3*12+5) = (3*1+5) mod 11 = 8
[],[],[],[],[],[],[],[],[12],[],[]
h(44) = (3*44+5) = (3*0+5) mod 11 = 5
[],[],[],[],[],[44],[],[],[12],[],[]
h(13) = (3*13+5) = (3*2+5) mod 11 = 0
[13],[],[],[],[],[44],[],[],[12],[],[]
h(88) = (3*88+5) = (3*0+5) mod 11 = 5
[13],[],[],[],[],[44, 88],[],[],[12],[],[]
h(23) = (3*23+5) = (3*1+5) mod 11 = 8
[13],[],[],[],[],[44, 88],[],[],[12, 23],[],[]
h(94) = (3*94+5) = (3*6+5) mod 11 = 1
[13],[94],[],[],[],[44, 88],[],[],[12, 23],[],[]
h(11) = (3*11+5) = (3*0+5) mod 11 = 5
[13],[94],[],[],[],[44, 88, 11],[],[],[12, 23],[],[]
h(39) = (3*39+5) = (3*6+5) mod 11 = 1
[13],[94, 39],[],[],[],[44, 88, 11],[],[],[12, 23],[],[]
h(20) = (3*20+5) = (3*9+5) mod 11 = 10
[13],[94, 39],[],[],[],[44, 88, 11],[],[],[12, 23],[],[20]
h(16) = (3*16+5) = (3*5+5) mod 11 = 9
[13],[94, 39],[],[],[],[44, 88, 11],[],[],[12, 23],[16],[20]
h(5)  = (3*5+5) mod 11 = 9
[13],[94, 39],[],[],[],[44, 88, 11],[],[],[12, 23],[16, 5],[20]


# In[ ]:


Question 2
Hash table
[],[],[],[],[],[],[],[],[],[],[]
h(12)
[],[],[],[],[],[],[],[],[12],[],[]
h(44)
[],[],[],[],[],[44],[],[],[12],[],[]
h(13)
[13],[],[],[],[],[44],[],[],[12],[],[]
h(88)
[13],[],[],[],[],[44],[88],[],[12],[],[]
h(23)
[13],[],[],[],[],[44],[88],[],[12],[23],[]
h(94)
[13],[94],[],[],[],[44],[88],[],[12],[23],[]
h(11)
[13],[94],[],[],[],[44],[88],[11],[12],[23],[]
h(39)
[13],[94],[39],[],[],[44],[88],[11],[12],[23],[]
h(20)
[13],[94],[39],[],[],[44],[88],[11],[12],[23],[20]
h(16)
[13],[94],[39],[16],[],[44],[88],[11],[12],[23],[20]
h(5)
[13],[94],[39],[16],[5],[44],[88],[11],[12],[23],[20]


# In[ ]:


Question 3
Hash function H(i) = [(3i+5) + j^2] mod 11 for j = 0,1,...
Hash table
[], [], [], [], [], [], [], [], [], [], []
H(12) for j = 0
[], [], [], [], [], [], [], [], [12], [], []
H(44) for j = 0
[], [], [], [], [], [44], [], [], [12], [], []
H(13) for j = 0
[13], [], [], [], [], [44], [], [], [12], [], []
H(88) for j = 1
[13], [], [], [], [], [44], [88], [], [12], [], []
H(23) for j = 1
[13], [], [], [], [], [44], [88], [], [12], [23], []
H(94) for j = 0
[13], [94], [], [], [], [44], [88], [], [12], [23], []
H(11) for j = 3
[13], [94], [], [11], [], [44], [88], [], [12], [23], []
H(39) for j = 1
[13], [94], [39], [11], [], [44], [88], [], [12], [23], []
H(20) for j = 0
[13], [94], [39], [11], [], [44], [88], [], [12], [23], [20]
H(16) for j = 3
[13], [94], [39], [11], [], [44], [88], [16], [12], [23], [20]
H(5), cannot be loaded
all attempts for j = 1 to 10, mod 11 does not equal the empty bucket number 4.


# In[ ]:


Question 4
Hash function: H(i) = [(3i+5) + j x [7 - (k mod 7)]] mod 11, for j = 0,1,...
Hash table
[], [], [], [], [], [], [], [], [], [], []
H(12) for j = 0
[], [], [], [], [], [], [], [], [12], [], []
H(44) for j = 0
[], [], [], [], [], [44], [], [], [12], [], []
H(33) for j = 0
[13], [], [], [], [], [44], [], [], [12], [], []

H(88) for j = 3
H(88) = [269 + (3 x [7 - (88 mod 7)])] mod 11
H(88) = [269 + (3 x [7 - 4])] mod 11
H(88) = (269 + 9) mod 11
H(88) = 278 mod 11 = 3
[13], [], [], [88], [], [44], [], [], [12], [], []

H(23) for j = 1
h(23) = [74 + (1 x [7 - (23 mod 7)])] mod 11
h(23) = [74 + (1 x [7 - 2])] mod 11
h(23) = (74 + 5) mod 11
h(23) = 79 mod 11 = 2
[13], [], [23], [88], [], [44], [], [], [12], [], []

H(94) for j = 1
[13], [], [23], [88], [], [44], [94], [], [12], [], []

H(11) for j = 1
[13], [], [23], [88], [], [44], [11], [], [12], [11], []

H(39) for j = 0
[13], [39], [23], [88], [], [44], [11], [], [12], [11], []

H(20) for j = 0
[13], [39], [23], [88], [], [44], [11], [], [12], [11], [20]

H(16) for j = 4
H(16) = [53 + (4 x [7 - (16 mod 7)])] mod 11
H(16) = [53 + (4 x [7 - 2])] mod 11
H(16) = [53 + (4 x 5)] mod 11
H(16) = 73 mod 11 = 7
[13], [39], [23], [88], [], [44], [11], [16], [12], [11], [20]

H(5) for j = 3
H(5) = [20 + (3 x [7 - (5 mod 7)])] mod 11
H(5) = [20 + (3 x [7 - 5])] mod 11
H(5) = [20 + (3 x 2)] mod 11
H(5) = 26 mod 11 = 4
[13], [39], [23], [88], [5], [44], [11], [16], [12], [11], [20]


# In[ ]:


Question 5
Hash function: H(k) = 3k mod 17
Hash table
[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []
H(54) = 9
[], [], [], [], [], [], [], [], [], [54], [], [], [], [], [], [], [], [], []
H(28) = 16
[], [], [], [], [], [], [], [], [], [54], [], [], [], [], [], [], [28], [], []
H(41) = 4
[], [], [], [], [41], [], [], [], [], [54], [], [], [], [], [], [], [28], [], []
H(18) = 3
[], [], [], [18], [41], [], [], [], [], [54], [], [], [], [], [], [], [28], [], []
H(10) = 13
[], [], [], [18], [41], [], [], [], [], [54], [], [], [], [10], [], [], [28], [], []
H(36) = 6
[], [], [], [18], [41], [], [36], [], [], [54], [], [], [], [10], [], [], [28], [], []
H(25) = 7
[], [], [], [18], [41], [], [36], [25], [], [54], [], [], [], [10], [], [], [28], [], []
H(38) = 12
[], [], [], [18], [41], [], [36], [25], [], [54], [], [], [38], [10], [], [], [28], [], []
H(12) = 2
[], [], [12], [18], [41], [], [36], [25], [], [54], [], [], [38], [10], [], [], [28], [], []
H(90) = 15
[], [], [12], [18], [41], [], [36], [25], [], [54], [], [], [38], [10], [], [90], [28], [], []


# In[ ]:


Question 6
Apply Binary Search Algorithm on each row to determine the position of the first 0 and add up 
all of the numbers up to that position (all 1's are before the first 0) will return the amount 
of 1's in the array, A.
                                        
This process takes O(n lg n) time, since it applies a binary search algorithm on each row of the 
matrix once.

